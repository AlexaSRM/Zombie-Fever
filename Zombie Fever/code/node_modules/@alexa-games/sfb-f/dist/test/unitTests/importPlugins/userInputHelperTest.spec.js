"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const userInputHelper_1 = require("./../../../importPlugins/userInputHelper");
const assert_1 = require("assert");
describe("User Input Helper Test", function () {
    it("getters and setters sanity test", async function () {
        const testUserInput = {
            intent: "something",
            slots: [
                {
                    name: "slotName",
                    value: "value"
                }
            ],
            value: "raw value"
        };
        const inputHelper = new userInputHelper_1.UserInputHelper(testUserInput);
        assert_1.strict.equal(inputHelper.getInputIntent(), testUserInput.intent);
        assert_1.strict.deepEqual(inputHelper.getInputSlots(), testUserInput.slots);
        assert_1.strict.equal(inputHelper.getInputValue(), testUserInput.value);
        assert_1.strict.equal(inputHelper.getHandlerInput(), testUserInput.handlerInput);
        assert_1.strict.deepEqual(inputHelper.getUserInput(), testUserInput);
        const newIntent = 'new intent';
        const newSlots = [{
                name: "newSlotName",
                value: "new value"
            }];
        const newValue = "new raw value";
        const addingSlot = {
            name: "addingSlotName",
            value: "adding value"
        };
        inputHelper.setInputIntent(newIntent);
        inputHelper.setInputSlots(newSlots);
        inputHelper.setInputValue(newValue);
        assert_1.strict.equal(inputHelper.getInputIntent(), newIntent);
        assert_1.strict.deepEqual(inputHelper.getInputSlots(), newSlots);
        assert_1.strict.equal(inputHelper.getInputValue(), newValue);
        inputHelper.clearUserInput();
        assert_1.strict.deepEqual(inputHelper.getUserInput(), {});
        inputHelper.addInputSlot(addingSlot.name, addingSlot.value);
        assert_1.strict.deepEqual(inputHelper.getInputSlots(), [addingSlot]);
    });
});
//# sourceMappingURL=userInputHelperTest.spec.js.map