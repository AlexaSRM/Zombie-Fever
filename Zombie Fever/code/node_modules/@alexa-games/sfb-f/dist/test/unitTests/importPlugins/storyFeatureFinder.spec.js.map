{"version":3,"file":"storyFeatureFinder.spec.js","sourceRoot":"","sources":["../../../../test/unitTests/importPlugins/storyFeatureFinder.spec.ts"],"names":[],"mappings":";;AACA,kFAA+E;AAC/E,mCAA0C;AAE7B,QAAA,iBAAiB,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA4BhC,CAAC;AAEW,QAAA,iBAAiB,GAAG;;;;;;;;;;;;;;eAclB,CAAC;AAEH,QAAA,mBAAmB,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UA8BzB,CAAC;AAEX,QAAQ,CAAC,oBAAoB,EAAE;IAG3B,EAAE,CAAC,0CAA0C,EAAE,GAAG,EAAE;QAChD,MAAM,MAAM,GAAG,IAAI,uCAAkB,CAAC,yBAAiB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QACrE,MAAM,MAAM,GAAG,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC5C,eAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,eAAe,CAAC,CAAC;IACpD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sDAAsD,EAAE,GAAG,EAAE;QAC5D,MAAM,MAAM,GAAG,IAAI,uCAAkB,CAAC,yBAAiB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QACrE,MAAM,MAAM,GAAG,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAE5C,eAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,eAAe,CAAC,CAAC;QAChD,eAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,sBAAsB,CAAC,CAAC;IAC/E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gDAAgD,EAAE,GAAG,EAAE;QACtD,MAAM,MAAM,GAAG,IAAI,uCAAkB,CAAC,yBAAiB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QACrE,MAAM,MAAM,GAAG,MAAM,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC;QAE3D,eAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,8BAA8B,CAAC,CAAC;QAC/D,eAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,gBAAgB,CAAC,CAAC;QAC3E,eAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,gBAAgB,CAAC,CAAC;QAC3E,eAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,sBAAsB,CAAC,CAAC;IACnF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE,GAAG,EAAE;QAClD,MAAM,MAAM,GAAG,IAAI,uCAAkB,CAAC,yBAAiB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QACrE,MAAM,MAAM,GAAG,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC5C,eAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,cAAc,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE,GAAG,EAAE;QAClD,MAAM,MAAM,GAAG,IAAI,uCAAkB,CAAC,yBAAiB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QACrE,MAAM,MAAM,GAAG,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC5C,eAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,cAAc,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uCAAuC,EAAE,GAAG,EAAE;QAC7C,MAAM,MAAM,GAAG,IAAI,uCAAkB,CAAC,2BAAmB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QACvE,MAAM,MAAM,GAAG,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;QACnD,eAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC;QAC5C,eAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,qBAAqB,CAAC,CAAC;IACpF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qDAAqD,EAAE,GAAG,EAAE;QAC3D,MAAM,MAAM,GAAG,IAAI,uCAAkB,CAAC,2BAAmB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QACvE,MAAM,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;QACvD,MAAM,KAAK,GAAG,MAAM,CAAC,sBAAsB,CAAC,UAAW,CAAC,KAAK,EAAE,MAAM,CAAC,CAAA;QAEtE,eAAM,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,EAAE,0BAA0B,CAAC,CAAC;QAC/C,eAAM,CAAC,KAAK,CAAC,KAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,EAAE,mBAAmB,CAAC,CAAC;QAC9D,eAAM,CAAC,KAAK,CAAC,KAAM,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,iBAAiB,CAAC,CAAC;QAC9D,eAAM,CAAC,KAAK,CAAC,KAAM,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,WAAW,CAAC,CAAC;QACpD,eAAM,CAAC,KAAK,CAAC,KAAM,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,2CAA2C,CAAC,CAAC;IAC1F,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE,GAAG,EAAE;QAClD,MAAM,MAAM,GAAG,IAAI,uCAAkB,CAAC,2BAAmB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QACvE,MAAM,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;QACvD,MAAM,KAAK,GAAG,MAAM,CAAC,sBAAsB,CAAC,UAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAA;QAErE,eAAM,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,wBAAwB,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["\nimport { StoryFeatureFinder } from '../../../importPlugins/storyFeatureFinder';\nimport { strict as assert } from 'assert';\n\nexport const TestOneSceneStory = `\n    @  scene one\n    * say\n        hello\n\n    over\n    *then\n        // Comment\n        hear this { \n            -> test \n        }\n\n        -> going to the market\n\n        hear a lot of things { \n            if foo { \n                -> going to the market\n            }\n        }\n\n    hear simple hear {{\n\n        <->       going to the market   \n        }\n    }\n\n    *end\n\n`;\n\nexport const TestTwoSceneStory = `\n@  scene one abc\n    * say\n        hello\n        *  then\n        if (foo) {\n            -> another place\n        }\n    @scene two\n        *say\n        whats up?  I hear you.\n    *then\n        stuff\n\n        things`;\n\nexport const TestThreeSceneStory = `\n@  scene one foo\n    * say\n        hello\n        there\n    *then\n    { test }\n\n    @   middle  scene    \n\n    *then\n        stuff\n\n        things\n        \n    @       final scene xyz\n\n    *say \n        Nothing\n\n    *then\n        -> next scene \n        hear bosy, bliew adi \n\n        {\n\n\n            -> other scene\n\n        }\nx        `;\n\ndescribe(\"StoryFeatureFinder\", function () {\n    \n\n    it(\"getReferences - one scene story, success\", () => {\n        const finder = new StoryFeatureFinder(TestOneSceneStory.split('\\n'));\n        const ranges = finder.getReferences('test');\n        assert.equal(ranges.length, 1, 'Found one ref');\n    });\n\n    it(\"getReferences - one scene story, whole hear included\", () => {\n        const finder = new StoryFeatureFinder(TestOneSceneStory.split('\\n'));\n        const ranges = finder.getReferences('test');\n\n        assert.equal(ranges.length, 1, 'Found one ref');\n        assert.ok(ranges[0].start.row < ranges[0].end.row, 'Covers multiple rows');\n    });\n\n    it(\"getReferences - one scene story, multiple refs\", () => {\n        const finder = new StoryFeatureFinder(TestOneSceneStory.split('\\n'));\n        const ranges = finder.getReferences('going to the market');\n\n        assert.equal(ranges.length, 3, 'Found correct number of refs');\n        assert.ok(ranges[0].start.row === ranges[0].end.row - 1, 'Covers one row');\n        assert.ok(ranges[1].start.row === ranges[1].end.row - 1, 'Covers one row');\n        assert.ok(ranges[2].start.row < ranges[2].end.row - 1, 'Covers multiple rows');\n    });\n\n    it(\"getReferences - one scene story, not found\", () => {\n        const finder = new StoryFeatureFinder(TestOneSceneStory.split('\\n'));\n        const ranges = finder.getReferences('none');\n        assert.equal(ranges.length, 0, 'Found no ref');\n    });\n\n    it(\"getReferences - two scene story, not found\", () => {\n        const finder = new StoryFeatureFinder(TestTwoSceneStory.split('\\n'));\n        const ranges = finder.getReferences('none');\n        assert.equal(ranges.length, 0, 'Found no ref');\n    });\n\n    it(\"getReferences - large but simple here\", () => {\n        const finder = new StoryFeatureFinder(TestThreeSceneStory.split('\\n'));\n        const ranges = finder.getReferences('other scene');\n        assert.equal(ranges.length, 1, 'Found ref');\n        assert.equal(ranges[0].end.row - ranges[0].start.row, 8, 'Hear on many lines.');\n    });\n\n    it(\"getScenePropertyByType - Find then block in a scene\", () => {\n        const finder = new StoryFeatureFinder(TestThreeSceneStory.split('\\n'));\n        const sceneBlock = finder.findScene('final scene xyz');\n        const block = finder.getScenePropertyByType(sceneBlock!.range, 'then')\n\n        assert.ok(!!block, 'Range should be defined.');\n        assert.equal(block!.range.start.row, 20, 'Found on this row');\n        assert.equal(block!.range.start.column, 0, 'Always column 0');\n        assert.equal(block!.range.end.row, 30, 'Ends here');\n        assert.equal(block!.range.end.column, 9, 'last line of document, so at this column.');\n    });\n\n    it(\"getScenePropertyByType - Missing foo block\", () => {\n        const finder = new StoryFeatureFinder(TestThreeSceneStory.split('\\n'));\n        const sceneBlock = finder.findScene('final scene xyz');\n        const block = finder.getScenePropertyByType(sceneBlock!.range, 'foo')\n\n        assert.ok(!block, 'Should not be defined.');\n    });\n});\n"]}