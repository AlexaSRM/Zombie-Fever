{"version":3,"file":"voiceOverExtensionTest.spec.js","sourceRoot":"","sources":["../../../../test/unitTests/extensions/voiceOverExtensionTest.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { VoiceOverExtension } from './../../../extensions/coreExtensions/VoiceOverExtension'\nimport { StoryMetadataHelper } from '../../../importPlugins/storyMetadataHelper';\nimport { StoryMetadata, InstructionType } from './../../../story/storyMetadata';\nimport { SourceContentHelper } from '../../../importPlugins/sourceContentHelper';\n\nimport { strict as assert } from 'assert';\n\nimport * as sinon from 'sinon';\n\ndescribe(\"Voice Over Extension Test\", function () {\n    it(\"No voice over tag in story.\", async function () {\n        const storyhelper = new StoryMetadataHelper(TEST_STORY);\n\n        const voiceOverExtension = new VoiceOverExtension('https://my.custom.url/{{filename}}');\n        await voiceOverExtension.extendImportedContent(storyhelper);\n\n        const resultingScript = voiceOverExtension.getRecordingScript();\n\n        assert.equal(resultingScript, \"\");\n        assert.equal(storyhelper.getSceneNarration('start'), TEST_STORY.scenes[0].contents[0].narration);\n    });\n\n    it(\"Tagged narration - file exists.\", async function () {\n        const mockHTTP = {\n            request: (options: any, callback: any) => {\n                callback({\n                    statusCode: 200\n                });\n\n                return {\n                    end: () => null\n                }\n            }\n        }\n\n        sinon.spy(mockHTTP, \"request\");\n\n        const storyhelper = new StoryMetadataHelper(VO_STORY);\n\n        const voiceOverExtension = new VoiceOverExtension('https://localhost/{{filename}}', mockHTTP);\n        await voiceOverExtension.extendImportedContent(storyhelper);\n\n        const resultingScript = voiceOverExtension.getRecordingScript();\n\n        assert.notEqual(resultingScript, \"\");\n        assert.notEqual(storyhelper.getSceneNarration('start'), TEST_STORY.scenes[0].contents[0].narration);\n    });\n\n    it(\"Tagged narration - file does not exists.\", async function () {\n        const mockHTTP = {\n            request: (options: any, callback: any) => {\n                callback({\n                    statusCode: 500\n                });\n\n                return {\n                    end: () => null\n                }\n            }\n        }\n\n        sinon.spy(mockHTTP, \"request\");\n\n        const storyhelper = new StoryMetadataHelper(VO_STORY);\n\n        const voiceOverExtension = new VoiceOverExtension('https://localhost/{{filename}}', mockHTTP);\n        await voiceOverExtension.extendImportedContent(storyhelper);\n\n        const resultingScript = voiceOverExtension.getRecordingScript();\n\n        assert.notEqual(resultingScript, \"\");\n        assert.equal(storyhelper.getSceneNarration('start'), TEST_STORY.scenes[0].contents[0].narration);\n    });\n\n    // set up to check and make sure http correctly detects existing mp3 via the url\n    it(\"Tagged narration - file exists - integration test\", async function () {\n        const storyhelper = new StoryMetadataHelper(VO_STORY);\n\n        const voiceOverExtension = new VoiceOverExtension('https://alexa-ml.s3.amazonaws.com/sounds/sound-library/Office/Copy_Machine_1.mp3');\n        await voiceOverExtension.extendImportedContent(storyhelper);\n\n        const resultingScript = voiceOverExtension.getRecordingScript();\n\n        assert.notEqual(resultingScript, \"\");\n        assert.equal(storyhelper.getSceneNarration('start'), \"<audio src=\\'https://alexa-ml.s3.amazonaws.com/sounds/sound-library/Office/Copy_Machine_1.mp3\\' />\");\n    });\n\n    it (\"Unused extension method 'extendSourceContent' does not throw when called\", async function () {\n        const voiceOverExtension = new VoiceOverExtension('https://alexa-ml.s3.amazonaws.com/sounds/sound-library/Office/Copy_Machine_1.mp3');\n        await voiceOverExtension.extendSourceContent(new SourceContentHelper([\n            {\n                id: \"test.abc\",\n                text: \"@start\"\n            }\n        ]));\n    });\n});\n\nconst TEST_STORY: StoryMetadata = {\n    pluginName: \"something\",\n    scenes: [\n        {\n            contents: [\n                {\n                    narration: \"testing narration\",\n                    sceneDirections: [\n                        {\n                            directionType: InstructionType.REPROMPT,\n                            parameters: {\n                                message: \"this is a reprompt\"\n                            }\n                        },\n                        {\n                            directionType: InstructionType.REPROMPT,\n                            parameters: {\n                                message: \"this is a recap\"\n                            }\n                        },\n                        {\n                            directionType: InstructionType.CHOICE,\n                            parameters: {\n                                \"utterances\": [\n                                    \"restart\",\n                                    \"start over\"\n                                ],\n                                \"saveToHistory\": \"true\",\n                                \"directions\": [\n                                    {\n                                        \"directionType\": \"bookmark\",\n                                        \"parameters\": {\n                                            \"variableName\": \"bookmark\"\n                                        },\n                                    },\n                                    {\n                                        \"directionType\": \"go to\",\n                                        \"parameters\": {\n                                            \"target\": \"restart confirm\",\n                                            \"targetSceneProperty\": \"narration\"\n                                        },\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                },\n                \n            ],\n            id: \"start\"\n        }\n    ],\n    storyID: \"something\",\n    storyTitle: \"something\"\n}\n\nconst VO_STORY: StoryMetadata = {\n    pluginName: \"something\",\n    scenes: [\n        {\n            contents: [\n                {\n                    narration: \"<vo>testing narration</vo>\",\n                    sceneDirections: [\n                        {\n                            directionType: InstructionType.REPROMPT,\n                            parameters: {\n                                message: \"this is a reprompt\"\n                            }\n                        },\n                        {\n                            directionType: InstructionType.REPROMPT,\n                            parameters: {\n                                message: \"this is a recap\"\n                            }\n                        },\n                        {\n                            directionType: InstructionType.CHOICE,\n                            parameters: {\n                                \"utterances\": [\n                                    \"restart\",\n                                    \"start over\"\n                                ],\n                                \"saveToHistory\": \"true\",\n                                \"directions\": [\n                                    {\n                                        \"directionType\": \"bookmark\",\n                                        \"parameters\": {\n                                            \"variableName\": \"bookmark\"\n                                        },\n                                    },\n                                    {\n                                        \"directionType\": \"go to\",\n                                        \"parameters\": {\n                                            \"target\": \"restart confirm\",\n                                            \"targetSceneProperty\": \"narration\"\n                                        },\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                },\n                \n            ],\n            id: \"start\"\n        }\n    ],\n    storyID: \"something\",\n    storyTitle: \"something\"\n}"]}