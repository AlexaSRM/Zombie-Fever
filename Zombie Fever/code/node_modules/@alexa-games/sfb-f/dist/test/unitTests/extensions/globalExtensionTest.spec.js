"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const GlobalDirectionsExtension_1 = require("./../../../extensions/coreExtensions/GlobalDirectionsExtension");
const storyMetadataHelper_1 = require("../../../importPlugins/storyMetadataHelper");
const storyMetadata_1 = require("./../../../story/storyMetadata");
const sourceContentHelper_1 = require("../../../importPlugins/sourceContentHelper");
const assert_1 = require("assert");
describe("Global Scene Extension Test", function () {
    it("No global scene", async function () {
        const storyHelper = new storyMetadataHelper_1.StoryMetadataHelper(TEST_STORY);
        const globalExtension = new GlobalDirectionsExtension_1.GlobalDirectionsExtension();
        await globalExtension.extendImportedContent(storyHelper);
        const resultingInstructions = storyHelper.getSceneInstructions('start');
        assert_1.strict.equal(resultingInstructions.length, 3);
    });
    it("prepend global scene", async function () {
        const storyHelper = new storyMetadataHelper_1.StoryMetadataHelper(PREPEND_STORY);
        const globalExtension = new GlobalDirectionsExtension_1.GlobalDirectionsExtension();
        await globalExtension.extendImportedContent(storyHelper);
        const resultingInstructions = storyHelper.getSceneInstructions('start');
        const reusltingNarration = storyHelper.getSceneNarration('start');
        assert_1.strict.equal(resultingInstructions.length, 4);
        assert_1.strict.equal(resultingInstructions[0].directionType, storyMetadata_1.InstructionType.FLAG);
        assert_1.strict.ok(reusltingNarration.match(/^appended narration /g));
    });
    it("postpend global scene", async function () {
        const storyHelper = new storyMetadataHelper_1.StoryMetadataHelper(POSTPEND_STORY);
        const globalExtension = new GlobalDirectionsExtension_1.GlobalDirectionsExtension();
        await globalExtension.extendImportedContent(storyHelper);
        const resultingInstructions = storyHelper.getSceneInstructions('start');
        const reusltingNarration = storyHelper.getSceneNarration('start');
        assert_1.strict.equal(resultingInstructions.length, 4);
        assert_1.strict.equal(resultingInstructions[resultingInstructions.length - 1].directionType, storyMetadata_1.InstructionType.FLAG);
        assert_1.strict.ok(reusltingNarration.match(/ appended narration$/g));
    });
    it("append global scene", async function () {
        const storyHelper = new storyMetadataHelper_1.StoryMetadataHelper(APPEND_STORY);
        const globalExtension = new GlobalDirectionsExtension_1.GlobalDirectionsExtension();
        await globalExtension.extendImportedContent(storyHelper);
        const resultingInstructions = storyHelper.getSceneInstructions('start');
        const reusltingNarration = storyHelper.getSceneNarration('start');
        assert_1.strict.equal(resultingInstructions.length, 4);
        assert_1.strict.equal(resultingInstructions[resultingInstructions.length - 1].directionType, storyMetadata_1.InstructionType.FLAG);
        assert_1.strict.ok(reusltingNarration.match(/ appended narration$/g));
    });
    it("default global scene", async function () {
        const storyHelper = new storyMetadataHelper_1.StoryMetadataHelper(STANDARD_GLOBAL_STORY);
        const globalExtension = new GlobalDirectionsExtension_1.GlobalDirectionsExtension();
        await globalExtension.extendImportedContent(storyHelper);
        const resultingInstructions = storyHelper.getSceneInstructions('start');
        const reusltingNarration = storyHelper.getSceneNarration('start');
        assert_1.strict.equal(resultingInstructions.length, 4);
        assert_1.strict.equal(resultingInstructions[resultingInstructions.length - 1].directionType, storyMetadata_1.InstructionType.FLAG);
        assert_1.strict.ok(reusltingNarration.match(/ appended narration$/g));
    });
    it("default global scene with exception scene", async function () {
        const storyHelper = new storyMetadataHelper_1.StoryMetadataHelper(STANDARD_GLOBAL_MULTI_SCENES_STORY);
        const globalExtension = new GlobalDirectionsExtension_1.GlobalDirectionsExtension(['start']);
        await globalExtension.extendImportedContent(storyHelper);
        const exceptionSceneInstruction = storyHelper.getSceneInstructions('start');
        const exceptionNarration = storyHelper.getSceneNarration('start');
        assert_1.strict.equal(exceptionSceneInstruction.length, 3);
        assert_1.strict.equal(exceptionNarration.match(/ appended narration$/g), null);
        const globaledSceneInstruction = storyHelper.getSceneInstructions('something else');
        const globaledSceneNarration = storyHelper.getSceneNarration('something else');
        assert_1.strict.equal(globaledSceneInstruction.length, 4);
        assert_1.strict.equal(globaledSceneInstruction[globaledSceneInstruction.length - 1].directionType, storyMetadata_1.InstructionType.FLAG);
        assert_1.strict.ok(globaledSceneNarration.match(/ appended narration$/g));
    });
    it("default global scene without scene instructions", async function () {
        const storyHelper = new storyMetadataHelper_1.StoryMetadataHelper(STANDARD_GLOBAL_STORY_NO_INSTRUCTIONS);
        const globalExtension = new GlobalDirectionsExtension_1.GlobalDirectionsExtension();
        await globalExtension.extendImportedContent(storyHelper);
        const resultingInstructions = storyHelper.getSceneInstructions('start');
        const reusltingNarration = storyHelper.getSceneNarration('start');
        assert_1.strict.equal(resultingInstructions.length, 3);
        assert_1.strict.ok(reusltingNarration.match(/ appended narration$/g));
    });
    it("append global instruction on empty scene", async function () {
        const storyHelper = new storyMetadataHelper_1.StoryMetadataHelper(STANDARD_GLOBAL_STORY_ON_EMPTY);
        const globalExtension = new GlobalDirectionsExtension_1.GlobalDirectionsExtension();
        await globalExtension.extendImportedContent(storyHelper);
        const resultingInstructions = storyHelper.getSceneInstructions('start');
        const reusltingNarration = storyHelper.getSceneNarration('start');
        assert_1.strict.equal(resultingInstructions.length, 1);
        assert_1.strict.ok(reusltingNarration.match(/ appended narration$/g));
    });
    it("prepend global instruction on empty scene", async function () {
        const storyHelper = new storyMetadataHelper_1.StoryMetadataHelper(PREPEND_GLOBAL_STORY_ON_EMPTY);
        const globalExtension = new GlobalDirectionsExtension_1.GlobalDirectionsExtension();
        await globalExtension.extendImportedContent(storyHelper);
        const resultingInstructions = storyHelper.getSceneInstructions('start');
        const reusltingNarration = storyHelper.getSceneNarration('start');
        assert_1.strict.equal(resultingInstructions.length, 1);
        assert_1.strict.ok(reusltingNarration.match(/^appended narration /g));
    });
    it("Unused extension method 'extendSourceContent' does not throw when called", async function () {
        const globalExtension = new GlobalDirectionsExtension_1.GlobalDirectionsExtension();
        await globalExtension.extendSourceContent(new sourceContentHelper_1.SourceContentHelper([
            {
                id: "test.abc",
                text: "@start"
            }
        ]));
    });
});
const TEST_STORY = {
    pluginName: "something",
    scenes: [
        {
            contents: [
                {
                    narration: "testing narration",
                    sceneDirections: [
                        {
                            directionType: storyMetadata_1.InstructionType.REPROMPT,
                            parameters: {
                                message: "this is a reprompt"
                            }
                        },
                        {
                            directionType: storyMetadata_1.InstructionType.REPROMPT,
                            parameters: {
                                message: "this is a recap"
                            }
                        },
                        {
                            directionType: storyMetadata_1.InstructionType.CHOICE,
                            parameters: {
                                "utterances": [
                                    "restart",
                                    "start over"
                                ],
                                "saveToHistory": "true",
                                "directions": [
                                    {
                                        "directionType": "bookmark",
                                        "parameters": {
                                            "variableName": "bookmark"
                                        },
                                    },
                                    {
                                        "directionType": "go to",
                                        "parameters": {
                                            "target": "restart confirm",
                                            "targetSceneProperty": "narration"
                                        },
                                    }
                                ]
                            }
                        }
                    ]
                },
            ],
            id: "start"
        }
    ],
    storyID: "something",
    storyTitle: "something"
};
const PREPEND_STORY = {
    pluginName: "something",
    scenes: [
        {
            contents: [
                {
                    narration: "testing narration",
                    sceneDirections: [
                        {
                            directionType: storyMetadata_1.InstructionType.REPROMPT,
                            parameters: {
                                message: "this is a reprompt"
                            }
                        },
                        {
                            directionType: storyMetadata_1.InstructionType.REPROMPT,
                            parameters: {
                                message: "this is a recap"
                            }
                        },
                        {
                            directionType: storyMetadata_1.InstructionType.CHOICE,
                            parameters: {
                                "utterances": [
                                    "restart",
                                    "start over"
                                ],
                                "saveToHistory": "true",
                                "directions": [
                                    {
                                        "directionType": "bookmark",
                                        "parameters": {
                                            "variableName": "bookmark"
                                        },
                                    },
                                    {
                                        "directionType": "go to",
                                        "parameters": {
                                            "target": "restart confirm",
                                            "targetSceneProperty": "narration"
                                        },
                                    }
                                ]
                            }
                        }
                    ]
                },
            ],
            id: "start"
        },
        {
            id: 'global prepend',
            contents: [
                {
                    narration: "appended narration",
                    sceneDirections: [
                        {
                            directionType: storyMetadata_1.InstructionType.FLAG,
                            parameters: {
                                variableName: "someFlag"
                            }
                        }
                    ]
                }
            ]
        }
    ],
    storyID: "something",
    storyTitle: "something"
};
const POSTPEND_STORY = {
    pluginName: "something",
    scenes: [
        {
            contents: [
                {
                    narration: "testing narration",
                    sceneDirections: [
                        {
                            directionType: storyMetadata_1.InstructionType.REPROMPT,
                            parameters: {
                                message: "this is a reprompt"
                            }
                        },
                        {
                            directionType: storyMetadata_1.InstructionType.REPROMPT,
                            parameters: {
                                message: "this is a recap"
                            }
                        },
                        {
                            directionType: storyMetadata_1.InstructionType.CHOICE,
                            parameters: {
                                "utterances": [
                                    "restart",
                                    "start over"
                                ],
                                "saveToHistory": "true",
                                "directions": [
                                    {
                                        "directionType": "bookmark",
                                        "parameters": {
                                            "variableName": "bookmark"
                                        },
                                    },
                                    {
                                        "directionType": "go to",
                                        "parameters": {
                                            "target": "restart confirm",
                                            "targetSceneProperty": "narration"
                                        },
                                    }
                                ]
                            }
                        }
                    ]
                },
            ],
            id: "start"
        },
        {
            id: 'global postpend',
            contents: [
                {
                    narration: "appended narration",
                    sceneDirections: [
                        {
                            directionType: storyMetadata_1.InstructionType.FLAG,
                            parameters: {
                                variableName: "someFlag"
                            }
                        }
                    ]
                }
            ]
        }
    ],
    storyID: "something",
    storyTitle: "something"
};
const APPEND_STORY = {
    pluginName: "something",
    scenes: [
        {
            contents: [
                {
                    narration: "testing narration",
                    sceneDirections: [
                        {
                            directionType: storyMetadata_1.InstructionType.REPROMPT,
                            parameters: {
                                message: "this is a reprompt"
                            }
                        },
                        {
                            directionType: storyMetadata_1.InstructionType.REPROMPT,
                            parameters: {
                                message: "this is a recap"
                            }
                        },
                        {
                            directionType: storyMetadata_1.InstructionType.CHOICE,
                            parameters: {
                                "utterances": [
                                    "restart",
                                    "start over"
                                ],
                                "saveToHistory": "true",
                                "directions": [
                                    {
                                        "directionType": "bookmark",
                                        "parameters": {
                                            "variableName": "bookmark"
                                        },
                                    },
                                    {
                                        "directionType": "go to",
                                        "parameters": {
                                            "target": "restart confirm",
                                            "targetSceneProperty": "narration"
                                        },
                                    }
                                ]
                            }
                        }
                    ]
                },
            ],
            id: "start"
        },
        {
            id: 'global append',
            contents: [
                {
                    narration: "appended narration",
                    sceneDirections: [
                        {
                            directionType: storyMetadata_1.InstructionType.FLAG,
                            parameters: {
                                variableName: "someFlag"
                            }
                        }
                    ]
                }
            ]
        }
    ],
    storyID: "something",
    storyTitle: "something"
};
const STANDARD_GLOBAL_STORY = {
    pluginName: "something",
    scenes: [
        {
            contents: [
                {
                    narration: "testing narration",
                    sceneDirections: [
                        {
                            directionType: storyMetadata_1.InstructionType.REPROMPT,
                            parameters: {
                                message: "this is a reprompt"
                            }
                        },
                        {
                            directionType: storyMetadata_1.InstructionType.REPROMPT,
                            parameters: {
                                message: "this is a recap"
                            }
                        },
                        {
                            directionType: storyMetadata_1.InstructionType.CHOICE,
                            parameters: {
                                "utterances": [
                                    "restart",
                                    "start over"
                                ],
                                "saveToHistory": "true",
                                "directions": [
                                    {
                                        "directionType": "bookmark",
                                        "parameters": {
                                            "variableName": "bookmark"
                                        },
                                    },
                                    {
                                        "directionType": "go to",
                                        "parameters": {
                                            "target": "restart confirm",
                                            "targetSceneProperty": "narration"
                                        },
                                    }
                                ]
                            }
                        }
                    ]
                },
            ],
            id: "start"
        },
        {
            id: 'global',
            contents: [
                {
                    narration: "appended narration",
                    sceneDirections: [
                        {
                            directionType: storyMetadata_1.InstructionType.FLAG,
                            parameters: {
                                variableName: "someFlag"
                            }
                        }
                    ]
                }
            ]
        }
    ],
    storyID: "something",
    storyTitle: "something"
};
const STANDARD_GLOBAL_MULTI_SCENES_STORY = {
    pluginName: "something",
    scenes: [
        {
            contents: [
                {
                    narration: "testing narration",
                    sceneDirections: [
                        {
                            directionType: storyMetadata_1.InstructionType.REPROMPT,
                            parameters: {
                                message: "this is a reprompt"
                            }
                        },
                        {
                            directionType: storyMetadata_1.InstructionType.REPROMPT,
                            parameters: {
                                message: "this is a recap"
                            }
                        },
                        {
                            directionType: storyMetadata_1.InstructionType.CHOICE,
                            parameters: {
                                "utterances": [
                                    "restart",
                                    "start over"
                                ],
                                "saveToHistory": "true",
                                "directions": [
                                    {
                                        "directionType": "bookmark",
                                        "parameters": {
                                            "variableName": "bookmark"
                                        },
                                    },
                                    {
                                        "directionType": "go to",
                                        "parameters": {
                                            "target": "restart confirm",
                                            "targetSceneProperty": "narration"
                                        },
                                    }
                                ]
                            }
                        }
                    ]
                },
            ],
            id: "start"
        },
        {
            contents: [
                {
                    narration: "testing narration",
                    sceneDirections: [
                        {
                            directionType: storyMetadata_1.InstructionType.REPROMPT,
                            parameters: {
                                message: "this is a reprompt"
                            }
                        },
                        {
                            directionType: storyMetadata_1.InstructionType.REPROMPT,
                            parameters: {
                                message: "this is a recap"
                            }
                        },
                        {
                            directionType: storyMetadata_1.InstructionType.CHOICE,
                            parameters: {
                                "utterances": [
                                    "restart",
                                    "start over"
                                ],
                                "saveToHistory": "true",
                                "directions": [
                                    {
                                        "directionType": "bookmark",
                                        "parameters": {
                                            "variableName": "bookmark"
                                        },
                                    },
                                    {
                                        "directionType": "go to",
                                        "parameters": {
                                            "target": "restart confirm",
                                            "targetSceneProperty": "narration"
                                        },
                                    }
                                ]
                            }
                        }
                    ]
                },
            ],
            id: "something else"
        },
        {
            id: 'global',
            contents: [
                {
                    narration: "appended narration",
                    sceneDirections: [
                        {
                            directionType: storyMetadata_1.InstructionType.FLAG,
                            parameters: {
                                variableName: "someFlag"
                            }
                        }
                    ]
                }
            ]
        }
    ],
    storyID: "something",
    storyTitle: "something"
};
const STANDARD_GLOBAL_STORY_NO_INSTRUCTIONS = {
    pluginName: "something",
    scenes: [
        {
            contents: [
                {
                    narration: "testing narration",
                    sceneDirections: [
                        {
                            directionType: storyMetadata_1.InstructionType.REPROMPT,
                            parameters: {
                                message: "this is a reprompt"
                            }
                        },
                        {
                            directionType: storyMetadata_1.InstructionType.REPROMPT,
                            parameters: {
                                message: "this is a recap"
                            }
                        },
                        {
                            directionType: storyMetadata_1.InstructionType.CHOICE,
                            parameters: {
                                "utterances": [
                                    "restart",
                                    "start over"
                                ],
                                "saveToHistory": "true",
                                "directions": [
                                    {
                                        "directionType": "bookmark",
                                        "parameters": {
                                            "variableName": "bookmark"
                                        },
                                    },
                                    {
                                        "directionType": "go to",
                                        "parameters": {
                                            "target": "restart confirm",
                                            "targetSceneProperty": "narration"
                                        },
                                    }
                                ]
                            }
                        }
                    ]
                },
            ],
            id: "start"
        },
        {
            id: 'global',
            contents: [
                {
                    narration: "appended narration"
                }
            ]
        }
    ],
    storyID: "something",
    storyTitle: "something"
};
const STANDARD_GLOBAL_STORY_ON_EMPTY = {
    pluginName: "something",
    scenes: [
        {
            contents: [
                {
                    narration: "testing narration"
                },
            ],
            id: "start"
        },
        {
            id: 'global',
            contents: [
                {
                    narration: "appended narration",
                    sceneDirections: [
                        {
                            directionType: storyMetadata_1.InstructionType.FLAG,
                            parameters: {
                                variableName: "someFlag"
                            }
                        }
                    ]
                }
            ]
        }
    ],
    storyID: "something",
    storyTitle: "something"
};
const PREPEND_GLOBAL_STORY_ON_EMPTY = {
    pluginName: "something",
    scenes: [
        {
            contents: [
                {
                    narration: "testing narration"
                },
            ],
            id: "start"
        },
        {
            id: 'global prepend',
            contents: [
                {
                    narration: "appended narration",
                    sceneDirections: [
                        {
                            directionType: storyMetadata_1.InstructionType.FLAG,
                            parameters: {
                                variableName: "someFlag"
                            }
                        }
                    ]
                }
            ]
        }
    ],
    storyID: "something",
    storyTitle: "something"
};
//# sourceMappingURL=globalExtensionTest.spec.js.map