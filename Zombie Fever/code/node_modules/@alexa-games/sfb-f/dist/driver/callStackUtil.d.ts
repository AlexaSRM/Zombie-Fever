import { StoryAccessor } from '../story/storyAccessor';
import { Instruction } from '../story/storyMetadata';
/**
 * Story's call stack manager for generating addresses, and accessing instructions in the story based on the address.
 */
export declare class CallStackUtil {
    private story;
    readonly PUBLISHED_VERSION: number;
    constructor(story: StoryAccessor);
    getChoiceAddress(originAddress: string, lineNumber: number): string;
    getConditionAddress(originAddress: string, lineNumber: number): string;
    getSceneAddress(sceneID: string, lineNumber: number): string;
    getReturnAddress(originAddress: string, lineNumber: number): string;
    getSourceScene(address: string): string;
    private isNewCallStack;
    private deserialize;
    private serialize;
    getInstructions(address: string, storyState: any): Instruction[];
    getInstructionSection(lineNumber: number, instructions: Instruction[]): Instruction[];
    callStackExists(state: any): boolean;
    addressInStack(state: any, address: string): any;
}
