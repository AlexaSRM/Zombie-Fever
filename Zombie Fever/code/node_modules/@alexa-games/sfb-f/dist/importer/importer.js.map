{"version":3,"file":"importer.js","sourceRoot":"","sources":["../../importer/importer.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * abc-importer\n * \n * Imports and exports between various branched content formats and the Alexa Branching Content (ABC) format.\n */\n\nimport { DefaultFormatImportPlugin } from '../importPlugins/DefaultFormatImportPlugin';\nimport { AlexaABCVerifier } from \"../verificationHandlers/alexa-abc-verifier\";\nimport { ImportResult, ImportErrorLine, ImportError } from \"./importerEntity\";\nimport { ABCImportPlugin } from './../importPlugins/importerPlugin';\nimport { ABCExporter } from './../exportHandlers/exporter';\nimport { StoryMetadata, InstructionType } from './../story/storyMetadata';\nimport { ModelBuilder, AlexaVoiceModelBuilder } from '../bakeUtilities/VoiceModelBuilder';\nimport { BUILT_IN_INTENT_UTTERANCES as builtInIntents } from '../bakeUtilities/BuiltInIntents';\nimport { DriverExtension, ImporterExtension, InstructionExtension, isImporterExtension } from \"../extensions/ACEExtension\";\nimport { StoryMetadataHelper } from \"../importPlugins/storyMetadataHelper\";\nimport { SourceContentHelper } from \"../importPlugins/sourceContentHelper\";\n\nimport { readUtf8FileExcludingBomSync } from '@alexa-games/sfb-util';\n\nimport * as fs from \"fs\";\n\nexport interface ContentItem {\n    id?: string,\n    text: string\n}\n\ninterface ImportOption {\n\t/**\n\t * raw string of content to import.\n\t */\n\tcontent?: string;\n\t/**\n\t * list of contents to import as one story.\n\t */\n\tcontents?: ContentItem[];\n\t/**\n\t * content format version. default is 1\n\t */\n\tversion?: number;\n\t/**\n\t * importing locale\n\t */\n\tlocale?: string;\n\t/**\n\t * if true, the import does not throw on import error.\n\t */\n\tignoreSyntaxError?: boolean;\n\tmodelBuilder?: ModelBuilder;\n\tinvocationName?: string;\n\tcustomSlots?: {[key: string]: string[]};\n}\n\n\nexport class ACEImporter\n{\t\n\tstatic readonly fallBackEnabledLocales = [\n\t\t\"en\",\n\t\t\"de-DE\"\n\t];\n\n\timportHandlersByType : {[key: string] : ABCImportPlugin} = {};\n\t\n\texportHandlersByType : {[key: string] : ABCExporter} = {};\n\n\timportExtensions: (DriverExtension|ImporterExtension|InstructionExtension)[] = [];\n\n\tverifier : AlexaABCVerifier = new AlexaABCVerifier();\n\n\t// Constructor\n\tpublic constructor(customImporters?: ABCImportPlugin[], customerExporters?: {[key: string]: ABCExporter}, extensions?: (DriverExtension|ImporterExtension|InstructionExtension)[]) {\n\t\tlet importPlugins: ABCImportPlugin[] = [\n\t\t\tnew DefaultFormatImportPlugin()\n\t\t];\n\t\t\n\t\tif (customImporters) {\n\t\t\timportPlugins = importPlugins.concat(customImporters);\n\t\t}\n\n\t\tfor (let importPlug of importPlugins) {\n\t\t\tthis.importHandlersByType[importPlug.pluginName] = importPlug;\n\t\t}\n\n\t\tif (customerExporters) {\n\t\t\tObject.assign(this.exportHandlersByType, customerExporters);\n\t\t}\n\n\t\tif(extensions) {\n\t\t\tthis.importExtensions = extensions;\n\t\t}\n\t}\n\t\n\tpublic async importABCStory(format : string, filename : string, storyTitle: string, storyID: string, autoIntentGrouping?: boolean, param: ImportOption = {}): Promise<StoryMetadata> {\n\t\tlet contents: ContentItem[] = [];\n\n\t\tif (param.content) {\n\t\t\tcontents.push({\n\t\t\t\tid: \"default\",\n\t\t\t\ttext: param.content\n\t\t\t});\n\t\t} else if (param.contents) {\n\t\t\tcontents = param.contents;\n\t\t} else {\n\t\t\tcontents.push({\n\t\t\t\tid: filename,\n\t\t\t\ttext: readUtf8FileExcludingBomSync(filename)\n\t\t\t});\n\t\t}\n\t\t\n\n\t\tfor (let extension of this.importExtensions) {\n\t\t\tif (isImporterExtension(extension)) {\n\t\t\t\tconst sourceHelper = new SourceContentHelper(contents);\n\t\t\t\tawait extension.extendSourceContent(sourceHelper);\n\t\t\t\tparam.contents = sourceHelper.getAllSourceContents();\n\t\t\t}\n\t\t}\n\n\t\tlet importHandler : ABCImportPlugin = this.importHandlersByType[format];\n\n\t\tconst contentVersion: number = param.version || 1;\n\t\tconst optimalVersion = importHandler.getVersion();\n\t\tif (optimalVersion < contentVersion) {\n\t\t\tthrow new Error(`Unsupported Language Version: Importer expected content version ${optimalVersion}, but detected version ${contentVersion}.`);\n\t\t}\n\n\t\tlet thisObj = this;\n\t\tconst importResult: ImportResult = await importHandler.importData(contents, param);\n\t\tconst importedScenes = importResult.importedScenes;\n\t\tconst importErrors = importResult.errors || [];\n\n\t\tlet jsonObjOutput: StoryMetadata = {\n\t\t\tpluginName: importHandler.pluginName,\n\t\t\tscenes: importedScenes,\n\t\t\tstoryID: storyID,\n\t\t\tstoryTitle: storyTitle\n\t\t}\n\n\t\tfor (let extension of this.importExtensions) {\n\t\t\ttry {\n\t\t\t\tif (isImporterExtension(extension)) {\n\t\t\t\t\tconst metadataHelper = new StoryMetadataHelper(jsonObjOutput);\n\t\t\t\t\tawait extension.extendImportedContent(metadataHelper);\n\t\t\t\t\tjsonObjOutput = await metadataHelper.getStoryMetadata();\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tconst extensionError: ImportErrorLine = {\n\t\t\t\t\tlineNumber: 0,\t\t\t\t\t\t\n\t\t\t\t\terrorMessage: err,\n\t\t\t\t\terrorName: `Import Extension Error on ${extension.constructor.name}`\n\t\t\t\t};\n\n\t\t\t\timportErrors.push(extensionError);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (!param.ignoreSyntaxError) {\n\t\t\tconst finalError = await thisObj.verifier.verify(jsonObjOutput);\n\t\t\tfinalError.forEach((errorItem) => {\n\t\t\t\timportErrors.push(errorItem);\n\t\t\t});\n\t\t}\n\n\t\ttry {\n\t\t\tlet modelBuilder: ModelBuilder;\n\t\t\tif (param.modelBuilder) {\n\t\t\t\tmodelBuilder = param.modelBuilder;\n\t\t\t} else {\n\t\t\t\tmodelBuilder = new AlexaVoiceModelBuilder();\n\t\t\t}\n\t\t\t\n\t\t\tconst locale = param.locale || \"en-US\";\n\t\t\tconst language: string = locale.split(\"-\")[0];\n\t\t\tconst storyHelper = new StoryMetadataHelper(jsonObjOutput);\n\t\t\tconst localizedBuiltIn = builtInIntents[locale] || builtInIntents[language];\n\n\t\t\tif (ACEImporter.fallBackEnabledLocales.includes(locale) || ACEImporter.fallBackEnabledLocales.includes(language)) {\n\t\t\t\tlocalizedBuiltIn[\"AMAZON.FallbackIntent\"] = [];\n\t\t\t}\n\n\t\t\tconst voiceModel = modelBuilder.build({\n\t\t\t\tcustomSlots: Object.assign(param.customSlots || {}),\n\t\t\t\tbuiltInIntents: localizedBuiltIn,\n\t\t\t\tinvocationName: jsonObjOutput.storyTitle,\n\t\t\t\tstory: storyHelper,\n\t\t\t\tlocale: locale,\n\t\t\t});\n\n\t\t\tconst finalStoryMetadata = await storyHelper.getStoryMetadata();\n\t\t\tif (autoIntentGrouping) {\n\t\t\t\tfinalStoryMetadata.alexaVoiceModel = voiceModel;\t\n\t\t\t} else {\n\t\t\t\tlet allUtterances: any = {};\n\n\t\t\t\tfor (let scene of finalStoryMetadata.scenes) {\n\t\t\t\t\tfor (let content of scene.contents) {\n\t\t\t\t\t\tif (content.sceneDirections) {\n\t\t\t\t\t\t\tfor (let direction of content.sceneDirections) {\n\t\t\t\t\t\t\t\tif (direction.directionType == InstructionType.CHOICE) {\n\t\t\t\t\t\t\t\t\tallUtterances[direction.parameters.utterances] = 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfinalStoryMetadata.alexaVoiceModel = Object.keys(allUtterances);\t\n\t\t\t}\n\n\t\t\tjsonObjOutput = finalStoryMetadata;\n\t\t} catch(err) {\n\t\t\tif (err instanceof Error) {\n\t\t\t\timportErrors.push({\n\t\t\t\t\terrorName: \"VoiceModelBuildError\",\n\t\t\t\t\tlineNumber: 0,\n\t\t\t\t\terrorMessage: err.message + \"\\n\" + err.stack\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\timportErrors.push({\n\t\t\t\t\terrorName: \"VoiceModelBuildError\",\n\t\t\t\t\tlineNumber: 0,\n\t\t\t\t\terrorMessage: err\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\tif (importErrors && importErrors.length > 0) {\n\t\t\tthrow (<ImportError> {\n\t\t\t\terrorItems: importErrors,\n\t\t\t\timportedData: jsonObjOutput\n\t\t\t});\n\t\t} else {\n\t\t\treturn jsonObjOutput;\n\t\t}\n\t}\n\n\tpublic exportTo(format : string, filename : string, outputFilename : string) {\n\n\t\tlet fileData = readUtf8FileExcludingBomSync(filename);\n\n\t\tlet jsonInputObj = JSON.parse(fileData);\n\n\t\tlet exportHandler : ABCExporter = this.exportHandlersByType[format];\n\n\t\tconsole.log(this.exportHandlersByType);\n\n\t\texportHandler.exportData(jsonInputObj, function(outputData : {}) {\n\n\t\t\tconsole.log(\"Output Data:\");\n\t\t\tconsole.log(outputData);\n\t\t\n\t\t\tfs.writeFileSync(outputFilename, outputData);\n\t\t});\n\t}\n}\n"]}