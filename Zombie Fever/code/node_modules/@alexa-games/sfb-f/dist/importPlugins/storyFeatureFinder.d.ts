import { StoryBlockRange } from './storyBlockRange';
import { StoryBlock, SceneStoryBlock } from './storyBlock';
export declare class StoryFeatureFinder {
    private lines;
    private static readonly ReferenceNotationMatch;
    private static readonly BracesOrSpaces;
    constructor(lines: string[]);
    /**
     * Finds the range of the given scene. Returns undefined if the scene is not present.
     * @param sceneId ID of the scene to find.
     */
    findScene(sceneId: string): SceneStoryBlock | undefined;
    /**
     * Returns Ranges containing references to the specified scene.
     * @param sceneId Scene ID to find references to.
     */
    getReferences(sceneId: string): StoryBlockRange[];
    /**
     * Return range of the given property type or undefined if it is not found.
     * @param sceneBlock Range to include in the quest for the scene property.
     * @param propertyType Values like 'say', 'then', etc.
     */
    getScenePropertyByType(sceneBlock: StoryBlockRange, propertyType: string): StoryBlock | undefined;
    /**
     * Find simple hear blocks (blocks with nothing else but a single reference) and replaces the reference to the
     * entire hear block.
     * @param result List of references to expand
     * @param thenBlock Range to scan
     */
    private expandToSimpleHearBlocks;
    private isBlockSimple;
}
