"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const sfb_util_1 = require("@alexa-games/sfb-util");
const fs = __importStar(require("fs"));
const path = __importStar(require("path"));
exports.LANGUAGE_STRING_FILENAME = 'languageStrings.json';
class ResourceStringsLoaders {
    static loadLanguageStrings(contentSource) {
        console.log(`contentSource=${contentSource}`);
        let languageStringPath = path.join(contentSource, exports.LANGUAGE_STRING_FILENAME);
        if (fs.existsSync(languageStringPath)) {
            console.log(`Found languageStringPath=${languageStringPath}`);
            const data = sfb_util_1.readUtf8FileExcludingBomSync(languageStringPath);
            return JSON.parse(data);
        }
        return {};
    }
    static loadSnippets(configAccessor, locale) {
        const snippetMapFilePath = configAccessor.getSnippetMapFilePath(locale);
        if (!fs.existsSync(snippetMapFilePath)) {
            return undefined;
        }
        else {
            const data = sfb_util_1.readUtf8FileExcludingBomSync(snippetMapFilePath);
            return JSON.parse(data);
        }
    }
}
exports.ResourceStringsLoaders = ResourceStringsLoaders;
//# sourceMappingURL=ResourceStringsLoaders.js.map