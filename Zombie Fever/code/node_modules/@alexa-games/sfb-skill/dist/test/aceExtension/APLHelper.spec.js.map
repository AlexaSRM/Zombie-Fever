{"version":3,"file":"APLHelper.spec.js","sourceRoot":"","sources":["../../../src/test/aceExtension/APLHelper.spec.ts"],"names":[],"mappings":";;;;;;;;;AAAA,2CAA6B;AAC7B,mCAA0C;AAE1C,yDAAsD;AACtD,uDAAoD;AAGpD,MAAM,WAAW,GAAG,gCAAgC,CAAC;AAErD,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAE7B,EAAE,CAAC,gBAAgB,EAAE,KAAK,IAAI,EAAE;QAE5B,MAAM,MAAM,GAAG,MAAM,+BAAc,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,iBAAiB,CAAC,CAAC;QAEjG,MAAM,SAAS,GAAG,IAAI,qBAAS,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAEjD,eAAM,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;QAEnD,MAAM,MAAM,GAAG,MAAM,+BAAc,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,iBAAiB,CAAC,CAAC;QAEjG,MAAM,SAAS,GAAG,IAAI,qBAAS,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAEjD,MAAM,WAAW,GAAqB,EAAE,CAAC;QAEzC,WAAW,CAAC,IAAI,CAAE,EAAE,OAAO,EAAE,OAAO;YAChB,QAAQ,EAAE,SAAS;YACnB,KAAK,EAAG,aAAa,EAAC,CAAC,CAAC;QAE5C,MAAM,WAAW,GAAG,SAAS,CAAC,qCAAqC,CAAC,WAAW,CAAC,CAAC;QAEjF,eAAM,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;QAEvB,eAAM,CAAC,EAAE,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAElC,eAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,uCAAuC,CAAC,CAAC;IAC/E,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC","sourcesContent":["import * as path from 'path';\nimport { strict as assert } from 'assert';\n\nimport { ConfigAccessor } from '../../configAccessor';\nimport { APLHelper } from '../../handler/APLHelper';\nimport { VisualOptions } from '@alexa-games/sfb-f';\n\nconst CONFIG_FILE = \"./src/test/data/abcConfig.json\";\n\ndescribe('APL Helper Test', () => {\n\n    it('Initialization', async () => {\n\n        const config = await ConfigAccessor.loadConfigFile(path.resolve(CONFIG_FILE), \"./src/test/data\");\n\n        const aplHelper = new APLHelper('en-us', config);\n\n        assert.ok(aplHelper);\n    });\n\n    it('Generate Directive from APL Directive', async () => {\n\n        const config = await ConfigAccessor.loadConfigFile(path.resolve(CONFIG_FILE), \"./src/test/data\");\n\n        const aplHelper = new APLHelper('en-us', config);\n\n        const visualProps : VisualOptions[] = [];\n\n        visualProps.push( { sceneID: \"start\", \n                            template: \"default\", \n                            title : \"Story Title\"});\n\n        const aplTemplate = aplHelper.generateAPLDirectiveWithVisualOptions(visualProps);\n\n        assert.ok(aplTemplate);\n\n        assert.ok(aplTemplate.length > 0);\n\n        assert.equal(aplTemplate[0].type, \"Alexa.Presentation.APL.RenderDocument\");\n    });\n\n});\n"]}