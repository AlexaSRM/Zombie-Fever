{"version":3,"file":"BakeCommand.spec.js","sourceRoot":"","sources":["../../test/BakeCommand.spec.ts"],"names":[],"mappings":";;AAAA,MAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAA;AACxB,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAA;AAE5B,oDAAiD;AACjD,wDAAqD;AACrD,mCAA0C;AAE1C,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAEhC,EAAE,CAAC,eAAe,EAAE,KAAK,IAAI,EAAE;QAE3B,MAAM,WAAW,GAAG,IAAI,yBAAW,CAAC,EAAE,EAAE,IAAI,6BAAa,CAAC,CAAC;QAE3D,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,oCAAoC,CAAC,CAAC;QAEnE,MAAM,UAAU,GAAG,OAAO,GAAG,MAAM,CAAC;QAEpC,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAG1B,eAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;QAEtC,MAAM,WAAW,CAAC,YAAY,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QAGpD,eAAM,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;QAErC,MAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC;QAEjE,eAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,CAAC;QAE5B,eAAM,CAAC,EAAE,CAAC,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,CAAC,CAAC;QAEpD,eAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC;QACvC,eAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,CAAC,CAAC;QACrD,eAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,CAAC,CAAC;QACtD,eAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC","sourcesContent":["const fs = require('fs')\nconst path = require('path')\n\nimport { BakeCommand } from '../lib/bakeCommand';\nimport { ConsoleLogger } from '../lib/consoleLogger';\nimport { strict as assert } from 'assert';\n\ndescribe('Bake Command Tests', () => {\n\n    it('Test APL Bake', async () => {\n\n        const bakeCommand = new BakeCommand(\"\", new ConsoleLogger);\n\n        const aplPath = path.resolve(\"test/data/en-us/apl-templates.json\");\n\n        const outputFile = aplPath + \".out\";\n\n        fs.unlinkSync(outputFile);\n\n        // Verify file is deleted\n        assert.ok(!fs.existsSync(outputFile));\n\n        await bakeCommand.bakeAPLFiles(aplPath, outputFile);\n\n        // Verify file now exists\n        assert.ok(fs.existsSync(outputFile));\n\n        const generatedAPLHash = JSON.parse(fs.readFileSync(outputFile));\n\n        assert.ok(generatedAPLHash);\n\n        assert.ok(!generatedAPLHash['does not contain me']);\n\n        assert.ok(generatedAPLHash['default']);\n        assert.ok(generatedAPLHash['title-screen-apl-test']);\n        assert.ok(generatedAPLHash['ending-screen-apl-test']);\n        assert.ok(generatedAPLHash['subdir.subdir-apl']);\n    });\n\n});\n\n"]}