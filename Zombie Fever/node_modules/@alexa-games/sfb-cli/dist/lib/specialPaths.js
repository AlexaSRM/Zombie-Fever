"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const fileUtils_1 = require("./fileUtils");
const sfb_skill_1 = require("@alexa-games/sfb-skill");
const pathModule = __importStar(require("path"));
exports.ABC_CONFIG_FILE = 'abcConfig.json';
exports.DEPLOY_DIRECTORY = '.deploy';
exports.BUILD_OUTPUT_DIRECTORY = 'dist';
exports.BUILT_RESOURCES_DIRECTORY = 'res';
exports.BAKED_DIRECTORY = 'baked';
exports.RESOURCES_DIRECTORY = 'resources';
exports.METADATA_DIRECTORY = 'metadata';
exports.CODE_DIRECTORY = 'code';
exports.CONTENT_DIRECTORY = 'content';
exports.SKILL_SOURCE_TEMPLATES_DIRECTORY = 'samples';
exports.NODE_MODULES_DIRECTORY = 'node_modules';
exports.PACKAGE_MANIFEST_FILE = 'package.json';
exports.SAMPLE_STORY = 'example_story';
exports.EXTENSIONS_DIRECTORY = 'extensions';
exports.SKILL_MANIFEST_FILE = 'skill.json';
class SpecialPaths {
    constructor(storyPath) {
        this.storyPath = fileUtils_1.FileUtils.fixpath(storyPath);
        this.abcConfig = pathModule.join(this.storyPath, exports.ABC_CONFIG_FILE);
        this.deployPath = pathModule.join(this.storyPath, exports.DEPLOY_DIRECTORY);
        this.buildOutputPath = pathModule.join(this.deployPath, exports.BUILD_OUTPUT_DIRECTORY);
        this.builtResourcesPath = pathModule.join(this.buildOutputPath, exports.BUILT_RESOURCES_DIRECTORY);
        this.aceRootPath = fileUtils_1.FileUtils.fixpath(pathModule.join(__dirname, '../..'));
        this.bakedPath = pathModule.join(this.storyPath, exports.BAKED_DIRECTORY);
        this.codePath = pathModule.join(this.storyPath, exports.CODE_DIRECTORY);
        this.codeBuildOutputPath = pathModule.join(this.codePath, exports.BUILD_OUTPUT_DIRECTORY);
        this.contentPath = pathModule.join(this.storyPath, exports.CONTENT_DIRECTORY);
        this.skillSourceTemplates = pathModule.join(this.aceRootPath, exports.SKILL_SOURCE_TEMPLATES_DIRECTORY, exports.SAMPLE_STORY);
        this.skillSourceTemplateRoot = pathModule.join(this.aceRootPath, exports.SKILL_SOURCE_TEMPLATES_DIRECTORY);
        this.extensionLoaderPath = pathModule.join(this.codeBuildOutputPath, exports.EXTENSIONS_DIRECTORY, 'ExtensionLoader');
        let stageAndLocale = "";
        if (process.env['stage']) {
            stageAndLocale += process.env['stage'];
            if (process.env['locale']) {
                stageAndLocale += '-';
            }
        }
        if (process.env['locale']) {
            stageAndLocale += process.env['locale'];
        }
        this.metaDataStoragePath = pathModule.join(this.storyPath, exports.METADATA_DIRECTORY, stageAndLocale);
    }
    getResourcePath(locale) {
        return pathModule.join(this.getLocaleContentPath(locale), exports.RESOURCES_DIRECTORY);
    }
    getLocaleContentPath(locale) {
        return pathModule.join(this.contentPath, locale);
    }
    getLocaleBuiltResourcesPath(locale) {
        return pathModule.join(this.builtResourcesPath, locale);
    }
    async loadConfigDirectories() {
        if (!this.configDirs) {
            const config = await sfb_skill_1.ConfigAccessor.loadConfigFile(this.abcConfig, this.builtResourcesPath);
            this.configDirs = this.getConfigDirectories(config);
        }
        return this.configDirs;
    }
    getConfigDirectories(config) {
        const askSkillDirectoryName = config.askSkillDirectoryName;
        const askSkillFullPath = pathModule.join(this.deployPath, askSkillDirectoryName);
        return {
            askSkillDirectoryName,
            askSkillFullPath,
            lambdaCodeDeployPath: pathModule.join(askSkillFullPath, 'lambda', 'custom'),
            modelsDeployPath: pathModule.join(askSkillFullPath, 'models')
        };
    }
}
exports.SpecialPaths = SpecialPaths;
//# sourceMappingURL=specialPaths.js.map