import { StdOutput } from './stdOutput';
export interface CopyOptions {
    makeDestinationWritable?: boolean;
}
export declare class FileUtils {
    static replaceInFile(file: string, searchFor: string | RegExp, replaceWith: string): Promise<void>;
    static deleteDir(dirPath: string, stdOutput: StdOutput): Promise<void>;
    static deleteFile(filePath: string): void;
    static renameFileIfExists(oldPath: string, newPath: string): Promise<void>;
    static makeDir(dirPath: string): void;
    static fixpath(path: string): string;
    static isValidFileName(name: string): boolean;
    static getRelativePath(basePath: string, fullPath: string): string;
    static recursiveCopy(src: string, dst: string, options?: CopyOptions): Promise<void>;
    static copyFile(src: string, dst: string, options?: CopyOptions): Promise<void>;
    static writeGitIgnore(path: string): void;
    static filterFile(fileName: string, eliminate: RegExp): Promise<void>;
    static loadJson(filePath: string): any;
}
