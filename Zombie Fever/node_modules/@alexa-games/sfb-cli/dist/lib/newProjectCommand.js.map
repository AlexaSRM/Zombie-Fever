{"version":3,"file":"newProjectCommand.js","sourceRoot":"","sources":["../../lib/newProjectCommand.ts"],"names":[],"mappings":";;AAEA,MAAM,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AACnC,MAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAA;AAExB,2CAAwC;AAExC,iDAAqE;AAGrE,mDAAgD;AAEhD,MAAM,QAAQ,GAAG;IACb,OAAO,EAAE,iBAAiB;IAC1B,UAAU,EAAE,iBAAiB;CAChC,CAAA;AAKD,MAAa,iBAAiB;IAE1B,YACqB,SAAiB,EACjB,QAAgB,EAChB,MAAc,EACd,SAAoB;QAHpB,cAAS,GAAT,SAAS,CAAQ;QACjB,aAAQ,GAAR,QAAQ,CAAQ;QAChB,WAAM,GAAN,MAAM,CAAQ;QACd,cAAS,GAAT,SAAS,CAAW;IACzC,CAAC;IAEM,KAAK,CAAC,GAAG;QAEZ,MAAM,SAAS,GAAG,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAEtD,MAAM,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;QAC3D,MAAM,UAAU,GAAG,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAEhD,MAAM,IAAI,GAAG,IAAI,2BAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAE9C,MAAM,IAAI,GAAG,qBAAS,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/C,IAAI,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;YACrB,MAAM,IAAI,KAAK,CAAC,6BAA6B,IAAI,EAAE,CAAC,CAAC;SACxD;QAED,MAAM,aAAa,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAExF,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,aAAa,OAAO,IAAI,KAAK,CAAC,CAAC;QAG7D,MAAM,qBAAS,CAAC,aAAa,CAAC,aAAa,EAAE,IAAI,EAAE,EAAE,uBAAuB,EAAE,IAAI,EAAE,CAAC,CAAC;QAEtF,MAAM,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;QAE3D,MAAM,qBAAS,CAAC,aAAa,CAAC,UAAU,EAAE,IAAI,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC;QACtF,MAAM,qBAAS,CAAC,aAAa,CAAC,UAAU,EAAE,IAAI,MAAM,CAAC,QAAQ,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE,UAAU,CAAC,CAAC;QAI5F,MAAM,kCAAkC,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,oCAAqB,EAAE,CAAC,CAAC;QACvG,MAAM,uBAAuB,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,oCAAqB,CAAC,CAAC;QACtF,MAAM,qBAAS,CAAC,kBAAkB,CAAC,kCAAkC,EAAE,uBAAuB,CAAC,CAAC;QAEhG,MAAM,QAAQ,GAAG,qBAAS,CAAC,QAAQ,CAAC,uBAAuB,CAAC,CAAC;QAC7D,MAAM,6BAAa,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;QACpD,EAAE,CAAC,aAAa,CAAC,uBAAuB,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;QAE7E,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,SAAS,YAAY,CAAC,CAAA;IAC3D,CAAC;CACJ;AA/CD,8CA+CC","sourcesContent":["declare var require: any;\n\nconst pathModule = require('path');\nconst fs = require('fs')\n\nimport { FileUtils } from './fileUtils';\nimport { Logger } from './logger';\nimport { SpecialPaths, PACKAGE_MANIFEST_FILE } from './specialPaths';\nimport { Command } from './command';\nimport { StdOutput } from './stdOutput';\nimport { ManifestUtils } from './manifestUtils';\n\nconst template = {\n    storyId: 'my-branch-story',\n    storyTitle: 'My Branch Story'\n}\n\n/**\n * Creates a new project from sample.\n */\nexport class NewProjectCommand implements Command {\n\n    constructor(\n        private readonly storyPath: string,\n        private readonly template: string,\n        private readonly logger: Logger,\n        private readonly stdOutput: StdOutput) {\n    }\n\n    public async run() {\n      \n        const storyName = pathModule.basename(this.storyPath);\n\n        const storyId = storyName.replace(/ /g, '-').toLowerCase();\n        const storyTitle = storyName.replace(/-/g, ' ');\n\n        const dirs = new SpecialPaths(this.storyPath);\n    \n        const dest = FileUtils.fixpath(this.storyPath);\n        if (fs.existsSync(dest)) {\n            throw new Error(`Directory already exists: ${dest}`);\n        }\n    \n        const samplesSource = pathModule.join(dirs.skillSourceTemplateRoot, this.template, '*');\n\n        this.logger.status(`Copying ${samplesSource} to ${dest}...`);\n        \n        // Copy sample template to new folder.\n        await FileUtils.recursiveCopy(samplesSource, dest, { makeDestinationWritable: true });\n    \n        const configFile = pathModule.join(dest, 'abcConfig.json');\n\n        await FileUtils.replaceInFile(configFile, new RegExp(template.storyId, 'g'), storyId);\n        await FileUtils.replaceInFile(configFile, new RegExp(template.storyTitle, 'g'), storyTitle);\n\n        // Rename and fix up package.json file for the code. We changed the package.json file to _package.json in our \n        // samples because Electron builder messes with the file contents otherwise. SIM ABC-F-559\n        const placeholderPackageManifestFilePath = pathModule.join(dirs.codePath, `_${PACKAGE_MANIFEST_FILE}`);\n        const packageManifestFilePath = pathModule.join(dirs.codePath, PACKAGE_MANIFEST_FILE);\n        await FileUtils.renameFileIfExists(placeholderPackageManifestFilePath, packageManifestFilePath);\n\n        const manifest = FileUtils.loadJson(packageManifestFilePath);\n        await ManifestUtils.repairPackageManifest(manifest);\n        fs.writeFileSync(packageManifestFilePath, JSON.stringify(manifest, null, 4));\n\n        this.logger.success(`New story ${storyName} is ready.`)\n    }\n}\n"]}