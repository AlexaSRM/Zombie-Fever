"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utilities_1 = require("./utilities");
const fileUtils_1 = require("./fileUtils");
const specialPaths_1 = require("./specialPaths");
const fs_1 = require("fs");
const pathModule = require('path');
class VscodeExtensionCommand {
    constructor(logger, stdOutput) {
        this.logger = logger;
        this.stdOutput = stdOutput;
    }
    async run() {
        this.logger.status('Setting up SFB vscode extension ...');
        let dirs = new specialPaths_1.SpecialPaths('na');
        let homeDir = utilities_1.Utilities.isWin32 ? process.env['USERPROFILE'] : process.env['HOME'];
        const ACE_VSCODE_EXTENSION = 'sfb-vscode-extension';
        const vscodeExtDestPath = fileUtils_1.FileUtils.fixpath(`${homeDir}/.vscode/extensions/${ACE_VSCODE_EXTENSION}`);
        let vscodeExtSoucePath = pathModule.join(dirs.aceRootPath, 'node_modules', '@alexa-games', ACE_VSCODE_EXTENSION);
        if (!fs_1.existsSync(vscodeExtSoucePath)) {
            vscodeExtSoucePath = pathModule.join(dirs.aceRootPath, '..', ACE_VSCODE_EXTENSION);
        }
        await fileUtils_1.FileUtils.recursiveCopy(pathModule.join(vscodeExtSoucePath, '*'), vscodeExtDestPath);
        await utilities_1.Utilities.runCommandInDirectoryAsync(utilities_1.Utilities.npxBin, ['npm', 'install', '--production'], vscodeExtDestPath, this.stdOutput, { shell: true });
        this.logger.success('Success. Restart vscode to pickup extension features.');
    }
}
exports.VscodeExtensionCommand = VscodeExtensionCommand;
//# sourceMappingURL=vscodeExtensionCommand.js.map