{"version":3,"file":"vscodeExtensionCommand.js","sourceRoot":"","sources":["../../lib/vscodeExtensionCommand.ts"],"names":[],"mappings":";;AAAA,2CAAwC;AACxC,2CAAwC;AACxC,iDAA8C;AAI9C,2BAAgC;AAEhC,MAAM,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAOnC,MAAa,sBAAsB;IAE/B,YACqB,MAAc,EACd,SAAoB;QADpB,WAAM,GAAN,MAAM,CAAQ;QACd,cAAS,GAAT,SAAS,CAAW;IACzC,CAAC;IAEM,KAAK,CAAC,GAAG;QACZ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,qCAAqC,CAAC,CAAC;QAE1D,IAAI,IAAI,GAAG,IAAI,2BAAY,CAAC,IAAI,CAAC,CAAC;QAElC,IAAI,OAAO,GAAG,qBAAS,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAA,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAElF,MAAM,oBAAoB,GAAG,sBAAsB,CAAC;QAEpD,MAAM,iBAAiB,GAAG,qBAAS,CAAC,OAAO,CAAC,GAAG,OAAO,uBAAuB,oBAAoB,EAAE,CAAC,CAAC;QAErG,IAAI,kBAAkB,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,cAAc,EAAE,cAAc,EAAE,oBAAoB,CAAC,CAAC;QACjH,IAAI,CAAC,eAAU,CAAC,kBAAkB,CAAC,EAAE;YAEjC,kBAAkB,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,oBAAoB,CAAC,CAAC;SACtF;QAED,MAAM,qBAAS,CAAC,aAAa,CACzB,UAAU,CAAC,IAAI,CAAC,kBAAkB,EAAE,GAAG,CAAC,EACxC,iBAAiB,CAAC,CAAC;QAGvB,MAAM,qBAAS,CAAC,0BAA0B,CACtC,qBAAS,CAAC,MAAM,EAChB,CAAE,KAAK,EAAE,SAAS,EAAE,cAAc,CAAE,EACpC,iBAAiB,EACjB,IAAI,CAAC,SAAS,EACd,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;QAErB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,uDAAuD,CAAC,CAAC;IACjF,CAAC;CACJ;AAtCD,wDAsCC","sourcesContent":["import { Utilities } from './utilities';\nimport { FileUtils } from './fileUtils';\nimport { SpecialPaths } from './specialPaths';\nimport { Logger } from './logger';\nimport { StdOutput } from './stdOutput';\nimport { Command } from './command';\nimport { existsSync } from 'fs';\n\nconst pathModule = require('path');\n\n/**\n * Converts user's story to a runnable format.\n * Reads: vscode node_modules folder\n * Depends on: <nothing>\n */\nexport class VscodeExtensionCommand implements Command {\n\n    constructor(\n        private readonly logger: Logger,\n        private readonly stdOutput: StdOutput) {\n    }\n\n    public async run() {\n        this.logger.status('Setting up SFB vscode extension ...');\n\n        let dirs = new SpecialPaths('na');\n\n        let homeDir = Utilities.isWin32 ? process.env['USERPROFILE']: process.env['HOME'];\n\n        const ACE_VSCODE_EXTENSION = 'sfb-vscode-extension';\n\n        const vscodeExtDestPath = FileUtils.fixpath(`${homeDir}/.vscode/extensions/${ACE_VSCODE_EXTENSION}`);\n\n        let vscodeExtSoucePath = pathModule.join(dirs.aceRootPath, 'node_modules', '@alexa-games', ACE_VSCODE_EXTENSION);\n        if (!existsSync(vscodeExtSoucePath)) {\n            // if not installed with ace-cli, try looking in the parent folder.\n            vscodeExtSoucePath = pathModule.join(dirs.aceRootPath, '..', ACE_VSCODE_EXTENSION);\n        }\n\n        await FileUtils.recursiveCopy(\n            pathModule.join(vscodeExtSoucePath, '*'), \n            vscodeExtDestPath);\n\n        // Ensure module is fully resolved once moved. Do this in the destination since user won't need to be root.\n        await Utilities.runCommandInDirectoryAsync(\n            Utilities.npxBin,\n            [ 'npm', 'install', '--production' ],\n            vscodeExtDestPath,\n            this.stdOutput,\n            { shell: true });\n\n        this.logger.success('Success. Restart vscode to pickup extension features.');\n    }\n}"]}