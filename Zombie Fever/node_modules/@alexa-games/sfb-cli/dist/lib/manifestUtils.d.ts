import { Logger } from './logger';
import { StdOutput } from './stdOutput';
export interface PackageMetadata {
    name: string;
    version: string;
}
export declare class ManifestUtils {
    static readPackageVersion(logger: Logger): string;
    static readRawPackageVersion(): string;
    static readRawPackageNameVersion(): PackageMetadata;
    static repairPackageManifest(manifest: any): Promise<void>;
    static getLatestsMajorVersionFromNpm(nameVersion: PackageMetadata, stdOutput: StdOutput): Promise<string>;
    static getLatestPackageVersionFromNpm(packageRange: string, stdOutput: StdOutput): Promise<string>;
    static getPackageVersionsFromNpm(packageRange: string, stdOutput: StdOutput): Promise<string>;
    static checkDeploymentPackageVersionWithTooling(manifest: any, toolingMetadata: PackageMetadata, logger: Logger): void;
}
