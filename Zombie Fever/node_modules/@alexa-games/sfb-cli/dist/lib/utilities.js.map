{"version":3,"file":"utilities.js","sourceRoot":"","sources":["../../lib/utilities.ts"],"names":[],"mappings":";;;;;;;;;AAAA,iDAAsC;AAGtC,uCAAyB;AAEzB,MAAa,SAAS;IAEX,MAAM,CAAC,KAAK,CAAC,0BAA0B,CAC1C,OAAe,EACf,MAAgB,EAChB,SAAiB,EACjB,SAAoB,EACpB,OAAY;QAEZ,MAAM,IAAI,CAAC,uBAAuB,CAAC;YAC/B,OAAO;YACP,MAAM;YACN,SAAS;YACT,SAAS;YACT,OAAO;SACV,CAAC,CAAC;IACP,CAAC;IAEM,MAAM,CAAC,KAAK,CAAC,eAAe,CAC/B,OAAe,EACf,MAAgB,EAChB,SAAoB,EACpB,OAAY;QAEZ,MAAM,IAAI,CAAC,uBAAuB,CAAC;YAC/B,OAAO;YACP,MAAM;YACN,SAAS;YACT,OAAO;SACV,CAAC,CAAC;IACP,CAAC;IAEM,MAAM,CAAC,KAAK,CAAC,IAAI,CACpB,OAAgB,EAChB,CAAmB,EACnB,MAAc;QACd,IAAI;YACA,MAAM,CAAC,EAAE,CAAC;SACb;QAAC,OAAO,CAAC,EAAE;YACR,IAAI,OAAO,IAAI,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,EAAE;gBAC9B,MAAM,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBACvC,MAAM,KAAK,GAAG,CAAU,CAAC;gBACzB,IAAI,KAAK,IAAI,KAAK,CAAC,KAAK,EAAE;oBACtB,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;iBAC7B;aACJ;iBAAM;gBACH,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;aAC7B;SACJ;IACL,CAAC;IAEM,MAAM,KAAK,OAAO;QACrB,OAAO,OAAO,CAAC,QAAQ,KAAK,OAAO,CAAC;IACxC,CAAC;IAEM,MAAM,KAAK,MAAM;QACpB,OAAO,KAAK,CAAC;IACjB,CAAC;IAEM,MAAM,KAAK,OAAO;QACrB,OAAO,MAAM,CAAC;IAClB,CAAC;IAEM,MAAM,KAAK,MAAM;QACpB,OAAO,KAAK,CAAC;IACjB,CAAC;IAEM,MAAM,KAAK,MAAM;QACpB,OAAM,KAAK,CAAC;IAChB,CAAC;IAEO,MAAM,CAAC,uBAAuB,CAClC,EACI,OAAO,EACP,MAAM,EACN,SAAS,GAAG,SAAS,EACrB,SAAS,EACT,OAAO,GAAG,EAAE,EAQf;QAED,OAAO,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACzC,IAAI,KAAK,GAAsB,SAAS,CAAC;YACzC,MAAM,YAAY,GAAQ,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;YAErD,IAAI,SAAS,EAAE;gBACX,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;oBAC3B,MAAM,CAAC,IAAI,KAAK,CAAC,aAAa,SAAS,aAAa,CAAC,CAAC,CAAC;iBAC1D;gBAED,YAAY,CAAC,GAAG,GAAG,SAAS,CAAC;aAChC;YAED,MAAM,KAAK,GAAG,qBAAK,CAAC,OAAO,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;YAEnD,KAAK,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,GAAU,EAAE,EAAE;gBAC7B,KAAK,GAAG,GAAG,CAAC;YAChB,CAAC,CAAC,CAAC;YAEH,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE;gBAC7B,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;YAEH,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE;gBAC7B,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;YAEH,KAAK,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,EAAE;gBACvB,IAAI,KAAK,EAAE;oBACP,MAAM,CAAC,KAAK,CAAC,CAAC;iBACjB;qBAAM;oBACH,IAAI,IAAI,KAAK,CAAC,EAAE;wBACZ,MAAM,CAAC,IAAI,KAAK,CAAC,GAAG,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,0BAA0B,IAAI,EAAE,CAAC,CAAC,CAAC;qBACrF;yBAAM;wBACH,OAAO,EAAE,CAAC;qBACb;iBACJ;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;AA9HD,8BA8HC","sourcesContent":["import { spawn } from 'child_process';\nimport { Logger } from './logger';\nimport { StdOutput } from './stdOutput';\nimport * as fs from 'fs';\n\nexport class Utilities {\n\n    public static async runCommandInDirectoryAsync(\n        command: string,\n        params: string[],\n        directory: string,\n        stdOutput: StdOutput,\n        options: any) {\n\n        await this.runCommandAsyncInternal({\n            command,\n            params,\n            directory,\n            stdOutput,\n            options\n        });\n    }\n\n    public static async runCommandAsync(\n        command: string,\n        params: string[],\n        stdOutput: StdOutput,\n        options: any) {\n\n        await this.runCommandAsyncInternal({\n            command,\n            params,\n            stdOutput,\n            options\n        });\n    }\n\n    public static async wrap<T>(\n        verbose: boolean,\n        f: () => Promise<T>,\n        logger: Logger) {\n        try {\n            await f();\n        } catch (e) {\n            if (verbose || !('message' in e)) {\n                logger.failure(`${JSON.stringify(e)}`);\n                const error = e as Error;\n                if (error && error.stack) {\n                    logger.error(error.stack);\n                }\n            } else {\n                logger.failure(e.message);\n            }\n        }\n    }\n\n    public static get isWin32() {\n        return process.platform === \"win32\";\n    }\n\n    public static get npmBin() {\n        return 'npm';\n    }\n\n    public static get yarnBin() {\n        return 'yarn';\n    }\n\n    public static get npxBin() {\n        return 'npx';\n    }\n\n    public static get awsBin() {\n        return'aws';\n    }\n\n    private static runCommandAsyncInternal(\n        {\n            command,\n            params,\n            directory = undefined,\n            stdOutput,\n            options = {}\n        } :\n        {\n            command: string,\n            params: string[],\n            directory?: string,\n            stdOutput: StdOutput,\n            options?: any\n        }): Promise<void> {\n\n        return new Promise<void>((resolve, reject) => {\n            let error: Error | undefined = undefined;\n            const spawnOptions: any = Object.assign({}, options);\n\n            if (directory) {\n                if (!fs.existsSync(directory)) {\n                    reject(new Error(`Directory ${directory} not found.`));\n                }\n\n                spawnOptions.cwd = directory;\n            }\n\n            const child = spawn(command, params, spawnOptions);\n\n            child.on('error', (err: Error) => {\n                error = err;\n            });\n\n            child.stdout.on('data', (data) => {\n                stdOutput.stdOut(data);\n            });\n              \n            child.stderr.on('data', (data) => {\n                stdOutput.stdErr(data);\n            });\n\n            child.on('close', (code) => {\n                if (error) {\n                    reject(error);\n                } else {\n                    if (code !== 0) {\n                        reject(new Error(`${command} ${params.join(' ')} non-zero return code: ${code}`));\n                    } else {\n                        resolve();\n                    }\n                }\n            });\n        }); \n    }\n}\n"]}