{"version":3,"file":"simulateCommand.js","sourceRoot":"","sources":["../../lib/simulateCommand.ts"],"names":[],"mappings":";;;;;;;;;AAKA,uCAAyB;AACzB,2CAA6B;AAE7B,wEAA8D;AAC9D,iDAA8C;AAC9C,sDAAwD;AAExD,2CAAwC;AASxC,MAAa,eAAe;IAExB,YACqB,SAAiB,EACjB,MAAc,EACd,KAAc,EACd,MAAc;QAHd,cAAS,GAAT,SAAS,CAAQ;QACjB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAS;QACd,WAAM,GAAN,MAAM,CAAQ;IACnC,CAAC;IAEM,KAAK,CAAC,GAAG;QACZ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAA;QAE5C,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;YAChC,MAAM,IAAI,KAAK,CAAC,GAAG,IAAI,CAAC,SAAS,4CAA4C,CAAC,CAAC;SAClF;QAED,MAAM,IAAI,GAAG,IAAI,2BAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC9C,MAAM,MAAM,GAAG,MAAM,0BAAc,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAE5F,MAAM,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;IACxD,CAAC;IAEO,aAAa,CAAC,MAAc,EAAE,IAAkB,EAAE,MAAsB;QAC5E,MAAM,aAAa,GAAW,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,oBAAoB,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;QAE7H,MAAM,qBAAqB,GAAG,OAAO,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAEhE,MAAM,gBAAgB,GAAG,IAAI,qBAAqB,CAAC,eAAe,CAAC;YAC/D,MAAM;YACN,cAAc,EAAE,MAAM;SACzB,CAAC,CAAC;QAEH,MAAM,qBAAqB,GAAG,gBAAgB,CAAC,aAAa,EAAE,CAAC;QAE/D,MAAM,WAAW,GAAG,IAAI,gCAAW,CAAC,qBAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,qBAAqB,EAAE,aAAa,CAAC,CAAC;QAC7G,WAAW,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;QAClC,WAAW,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;IACxC,CAAC;CACJ;AAtCD,0CAsCC","sourcesContent":["declare var require: any;\n\n/* \n    Story Simulator script \n*/\nimport * as fs from 'fs';\nimport * as path from 'path';\n\nimport { ABCDebugger } from '@alexa-games/sfb-story-debugger';\nimport { SpecialPaths } from './specialPaths';\nimport { ConfigAccessor } from '@alexa-games/sfb-skill';\nimport { Logger } from './logger';\nimport { FileUtils } from './fileUtils';\nimport { Command } from './command';\n\n/**\n * Converts user's story to a runnable format.\n * Reads: Source path\n * Writes: Output path\n * Depends on: <nothing>\n */\nexport class SimulateCommand implements Command {\n\n    constructor(\n        private readonly storyPath: string,\n        private readonly locale: string,\n        private readonly quiet: boolean,\n        private readonly logger: Logger) {\n    }\n\n    public async run() {\n        this.logger.status('Simulating content ...')\n\n        if (!fs.existsSync(this.storyPath)) {\n            throw new Error(`${this.storyPath}: The specified story path does not exist.`);\n        }\n\n        const dirs = new SpecialPaths(this.storyPath);\n        const config = await ConfigAccessor.loadConfigFile(dirs.abcConfig, dirs.builtResourcesPath);\n\n        await this.simulateStory(this.locale, dirs, config);\n    }\n\n    private simulateStory(locale: string, dirs: SpecialPaths, config: ConfigAccessor ) {\n        const bakedFilePath: string = path.resolve(dirs.bakedPath, locale, config.getValue(\"abc-baked-filename\", undefined, locale));\n\n        const extensionLoaderModule = require(dirs.extensionLoaderPath);\n\n        const customExtensions = new extensionLoaderModule.ExtensionLoader({\n            locale,\n            configAccessor: config\n        });\n\n        const customStoryExtensions = customExtensions.getExtensions();\n\n        const abcDebugger = new ABCDebugger(FileUtils.loadJson(bakedFilePath), customStoryExtensions, bakedFilePath);\n        abcDebugger.verbose = !this.quiet;\n        abcDebugger.run(undefined, console);\n    }\n}\n"]}