import { HandlerInput } from 'ask-sdk';
import { Instruction } from './../story/storyMetadata';
export interface UserInput {
    intent?: string;
    slots?: Slot[];
    value?: string;
    handlerInput?: HandlerInput;
}
export interface ResultOption {
    name: string;
    value: any;
}
export interface Slot {
    name: string;
    value: string;
}
export declare const BuiltInUserInput: {
    [key: string]: UserInput;
};
export interface Choice {
    id: string;
    utterances: string[];
    narration?: string;
    sceneDirections?: Instruction[];
    instructionAddress?: string;
    saveToHistory: boolean;
}
export interface ChoiceHistoryItem {
    sourceSceneID: string;
    choiceID: string;
    stateDiff: StateDiffItem[];
}
export interface StateDiffItem {
    itemName: string;
    beforeValue: any;
    afterValue: any;
}
export interface AudioItem {
    type: AlexaAudioType;
    content: string;
    volume: number;
    delay: number;
    options?: {
        [key: string]: string;
    };
}
export declare enum AudioBlendOption {
    TRIM = "trim",
    LONGEST = "longest"
}
export interface SceneAudioItem {
    sceneID?: string;
    foreground: AudioItem[];
    background: AudioItem[];
}
export declare enum AlexaAudioType {
    POLLY = "polly",
    AUDIO = "audio",
    TEXT = "text"
}
export interface StorySlide {
    prompt: string;
    reprompt: string;
    recap: string;
    visual: VisualOptions;
}
export interface VisualOptions {
    sceneID?: string;
    onMountCommands?: string[];
    commands?: string[];
    [key: string]: any;
}
