{"version":3,"file":"driverEntity.js","sourceRoot":"","sources":["../../driver/driverEntity.ts"],"names":[],"mappings":";;AAoBa,QAAA,gBAAgB,GAA8B;IACvD,cAAc,EAAE;QACZ,MAAM,EAAE,eAAe;KAC1B;IACD,YAAY,EAAE;QACV,MAAM,EAAE,aAAa;KACxB;CACJ,CAAA;AA+BD,IAAY,gBAGX;AAHD,WAAY,gBAAgB;IACxB,iCAAa,CAAA;IACb,uCAAmB,CAAA;AACvB,CAAC,EAHW,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAG3B;AAQD,IAAY,cAIX;AAJD,WAAY,cAAc;IACtB,iCAAe,CAAA;IACf,iCAAe,CAAA;IACf,+BAAa,CAAA;AACjB,CAAC,EAJW,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAIzB","sourcesContent":["import {HandlerInput} from 'ask-sdk';\nimport {Instruction} from './../story/storyMetadata';\n\nexport interface UserInput {\n    intent?: string,\n    slots?: Slot[],\n    value?: string,\n    handlerInput?: HandlerInput\n}\n\nexport interface ResultOption {\n    name: string,\n    value: any\n}\n\nexport interface Slot {\n    name: string,\n    value: string\n}\n\nexport const BuiltInUserInput: {[key:string]: UserInput} = {\n    \"Resume Story\": {\n        intent: \"LaunchRequest\",\n    },\n    \"Exit Story\": {\n        intent: \"ExitRequest\"\n    }\n}\n\nexport interface Choice {\n    id: string;\n    utterances: string[];\n    narration?: string;\n    sceneDirections?: Instruction[];\n    instructionAddress?: string;\n    saveToHistory: boolean;\n}\n\nexport interface ChoiceHistoryItem {\n    sourceSceneID: string,\n    choiceID: string,\n    stateDiff: StateDiffItem[]\n}\n\nexport interface StateDiffItem {\n    itemName: string,\n    beforeValue: any,\n    afterValue: any\n}\n\nexport interface AudioItem {\n    type: AlexaAudioType,\n    content: string,\n    volume: number,\n    delay: number,\n    options?: {[key: string]: string;}\n}\n\nexport enum AudioBlendOption {\n    TRIM = 'trim',\n    LONGEST = 'longest'\n}\n\nexport interface SceneAudioItem {\n    sceneID?: string,\n    foreground: AudioItem[],\n    background: AudioItem[]\n}\n\nexport enum AlexaAudioType {\n    POLLY = \"polly\",\n    AUDIO = \"audio\",\n    TEXT = \"text\"\n}\n\nexport interface StorySlide {\n    prompt: string,\n    reprompt: string,\n    recap: string,\n    visual: VisualOptions\n}\n\nexport interface VisualOptions {\n    sceneID? : string,\n    onMountCommands?: string[], \n    commands?: string[], \n    [key:string]: any; // Add index signature\n}"]}