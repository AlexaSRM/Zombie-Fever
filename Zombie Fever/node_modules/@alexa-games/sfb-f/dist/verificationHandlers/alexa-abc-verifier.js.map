{"version":3,"file":"alexa-abc-verifier.js","sourceRoot":"","sources":["../../verificationHandlers/alexa-abc-verifier.ts"],"names":[],"mappings":";;AACA,0DAAsE;AAEtE,MAAa,gBAAgB;IAClB,KAAK,CAAC,MAAM,CAAC,KAAoB;QACpC,OAAO,IAAI,OAAO,CAAqB,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACvD,IAAI,WAAW,GAAsB,EAAE,CAAC;YAExC,IAAI,QAAQ,GAAY,KAAK,CAAC;YAC9B,KAAK,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,EAAE;gBAC5B,IAAI,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,IAAI,6BAAa,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,EAAE;oBAChF,QAAQ,GAAG,IAAI,CAAC;iBACnB;aACJ;YAED,IAAI,CAAC,QAAQ,EAAE;gBACX,WAAW,CAAC,IAAI,CAAC;oBACb,UAAU,EAAE,CAAC;oBACb,SAAS,EAAE,cAAc;oBACzB,YAAY,EAAE,yCAAyC;iBAC1D,CAAC,CAAA;aACL;YAED,OAAO,CAAC,WAAW,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;CAEJ;AAxBD,4CAwBC","sourcesContent":["import { ImportErrorLine } from \"../importer/importerEntity\";\nimport { BuiltInScenes, StoryMetadata } from \"../story/storyMetadata\";\n\nexport class AlexaABCVerifier {\n    public async verify(story: StoryMetadata): Promise<ImportErrorLine[]> {\n        return new Promise<ImportErrorLine[]> ((resolve, reject) => {\n            let foundErrors: ImportErrorLine[] = [];\n            \n            let hasStart: boolean = false;\n            for (let scene of story.scenes) {\n                if (scene.id.trim().toLowerCase() == BuiltInScenes.StartScene.trim().toLowerCase()) {\n                    hasStart = true;\n                }\n            }\n\n            if (!hasStart) {\n                foundErrors.push({\n                    lineNumber: 0,\n                    errorName: \"MissingScene\",\n                    errorMessage: \"Cannot find the required scene 'start'.\"\n                })\n            }\n\n            resolve(foundErrors);\n        });\n    }\n\n}"]}