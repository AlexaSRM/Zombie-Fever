export declare class ConfigAccessor {
    private abcConfig;
    static defaultStage: string;
    static defaultLocale: string;
    private contentPath;
    private deployedFlag?;
    constructor(abcConfig: any, contentPath: string);
    set deployed(value: boolean);
    setValue(keyName: string, val: any, stage?: string, locale?: string): void;
    get askSkillDirectoryName(): any;
    get validResourceFileExtensions(): string[];
    get additionalResourceDirectories(): string[];
    get publishLocales(): string[];
    getResourcePath(locale: string): string;
    getS3ResourcesUri(locale: string): string;
    getS3DomainName(locale: string): string;
    getS3BucketName(locale: string): string;
    getSnippetMapFilePath(locale: string): string;
    getAskSkillPath(locale: string): string;
    shouldOverwriteWithSource(locale: string): boolean;
    getAplTemplatesFilePath(locale: string): string;
    getAplCommandsFilePath(locale: string): string;
    getValue(keyName: string, stage?: string, locale?: string, skipLocaleMapping?: boolean, skillId?: string): any;
    getRequestLocalizedValue(keyName: string, event: any): any;
    static loadConfigFile(configFile: string, contentPath: string): Promise<ConfigAccessor>;
}
