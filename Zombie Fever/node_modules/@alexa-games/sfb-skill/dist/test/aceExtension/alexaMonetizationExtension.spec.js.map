{"version":3,"file":"alexaMonetizationExtension.spec.js","sourceRoot":"","sources":["../../../src/test/aceExtension/alexaMonetizationExtension.spec.ts"],"names":[],"mappings":";;;;;;;;;AAAA,2CAA6B;AAC7B,mCAA0C;AAE1C,yDAAsD;AACtD,8FAA2F;AAC3F,8CAA8J;AAE9J,qDAAuC;AAEvC,MAAM,WAAW,GAAG,gCAAgC,CAAC;AAErD,QAAQ,CAAC,mCAAmC,EAAE,GAAG,EAAE;IAE/C,EAAE,CAAC,gBAAgB,EAAE,KAAK,IAAI,EAAE;QAE5B,MAAM,MAAM,GAAG,MAAM,+BAAc,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,iBAAiB,CAAC,CAAC;QAEjG,MAAM,0BAA0B,GAAG,IAAI,uDAA0B,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAEnF,eAAM,CAAC,EAAE,CAAC,0BAA0B,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,eAAe,EAAE,KAAK,IAAI,EAAE;QAE3B,MAAM,MAAM,GAAG,MAAM,+BAAc,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,iBAAiB,CAAC,CAAC;QAEjG,MAAM,0BAA0B,GAAG,IAAI,uDAA0B,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAEnF,MAAM,0BAA0B,CAAC,GAAG,CAAC,QAAQ,CAAC,2BAA2B,CAAC,KAAK,EAAE,EAAC,MAAM,EAAE,gBAAgB,EAAC,CAAC,CAAC,CAAC;QAE9G,MAAM,eAAe,GAAG,IAAI,uBAAe,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAEpE,MAAM,KAAK,GAA8B,EAAE,UAAU,EAAE,EAAE;YACd,eAAe;YACf,MAAM,EAAE,QAAQ,CAAC,oBAAoB,EAAE;YACvC,MAAM,EAAE,OAAO;SAChB,CAAC;QAE3C,MAAM,0BAA0B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAEjD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kBAAkB,EAAE,KAAK,IAAI,EAAE;QAE9B,MAAM,MAAM,GAAG,MAAM,+BAAc,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,iBAAiB,CAAC,CAAC;QAEjG,MAAM,0BAA0B,GAAG,IAAI,uDAA0B,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAEnF,MAAM,0BAA0B,CAAC,GAAG,CAAC,QAAQ,CAAC,2BAA2B,CAAC,QAAQ,EAAE,EAAC,MAAM,EAAE,gBAAgB,EAAC,CAAC,CAAC,CAAC;QAEjH,MAAM,eAAe,GAAG,IAAI,uBAAe,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAEpE,MAAM,KAAK,GAA8B,EAAE,UAAU,EAAE,EAAE;YACd,eAAe;YACf,MAAM,EAAE,QAAQ,CAAC,oBAAoB,EAAE;YACvC,MAAM,EAAE,OAAO;SAChB,CAAC;QAE3C,MAAM,0BAA0B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAEjD,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC","sourcesContent":["import * as path from 'path';\nimport { strict as assert } from 'assert';\n\nimport { ConfigAccessor } from '../../configAccessor';\nimport { AlexaMonetizationExtension } from '../../aceExtension/alexaMonetizationExtension';\nimport { ACEDriver, UserInputHelper, UserInput, DriverExtensionParameter, InstructionExtensionParameter, PlayStage, StoryAccessor } from '@alexa-games/sfb-f';\n\nimport * as testUtil from './testUtil';\n\nconst CONFIG_FILE = \"./src/test/data/abcConfig.json\";\n\ndescribe('Alexa Monetization Extension Test', () => {\n\n    it('Initialization', async () => {\n\n        const config = await ConfigAccessor.loadConfigFile(path.resolve(CONFIG_FILE), \"./src/test/data\");\n\n        const alexaMonetizationExtension = new AlexaMonetizationExtension('en-us', config);\n\n        assert.ok(alexaMonetizationExtension);\n    });\n\n    it('Test buy post', async () => {\n\n        const config = await ConfigAccessor.loadConfigFile(path.resolve(CONFIG_FILE), \"./src/test/data\");\n\n        const alexaMonetizationExtension = new AlexaMonetizationExtension('en-us', config);\n\n        await alexaMonetizationExtension.buy(testUtil.getMockInstructionParameter(\"buy\", {\"item\": \"sample product\"}));\n\n        const userInputHelper = new UserInputHelper(testUtil.testUserInput);\n\n        const param : DriverExtensionParameter = { storyState: {}, \n                                                   userInputHelper,\n                                                   driver: testUtil.getDefaultBaseDriver(),\n                                                   locale: 'en-US'\n                                                 };\n\n        await alexaMonetizationExtension.post(param);\n\n    });\n\n    it('Test refund post', async () => {\n\n        const config = await ConfigAccessor.loadConfigFile(path.resolve(CONFIG_FILE), \"./src/test/data\");\n\n        const alexaMonetizationExtension = new AlexaMonetizationExtension('en-us', config);\n\n        await alexaMonetizationExtension.buy(testUtil.getMockInstructionParameter(\"refund\", {\"item\": \"sample product\"}));\n\n        const userInputHelper = new UserInputHelper(testUtil.testUserInput);\n\n        const param : DriverExtensionParameter = { storyState: {}, \n                                                   userInputHelper,\n                                                   driver: testUtil.getDefaultBaseDriver(),\n                                                   locale: 'en-US'\n                                                 };\n\n        await alexaMonetizationExtension.post(param);\n\n    });\n\n});\n\n"]}